{"version":3,"sources":["Components/Searchbar.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","state","inputText","amount","apiUrl","apiKey","pins","open","currentImg","handleOpen","pin","_this","setState","onTextChange","e","input","target","value","Object","defineProperty","name","axios","get","concat","then","res","data","hits","catch","err","console","log","_this2","this","_this3","_this4","_this5","react_default","a","createElement","href","className","onChange","placeholder","class","onClick","changedesign","bind","map","key","id","webformatURL","src","alt","user","Component","App","Searchbar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.675b4f2e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios'\r\n\r\nclass SearchBar extends Component {\r\n\r\n  state = {\r\n    inputText: '',\r\n    amount: 30,\r\n    apiUrl: 'https://pixabay.com/api/',\r\n    apiKey: '1721901-fa9bcc6ed3f879da0567a53bb',\r\n    pins: [],\r\n    open: false,\r\n    currentImg: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `${this.state.apiUrl}/?key=${this.state.apiKey}&q=watercolor&orientation=vertical&image_type=photo&per_page=${this.state.amount}&safesearch=true`)\r\n      .then(res => this.setState({ pins: res.data.hits }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  changeW() {\r\n    axios\r\n      .get(\r\n        `${this.state.apiUrl}/?key=${this.state.apiKey}&q=watercolors&orientation=vertical&image_type=photo&per_page=${this.state.amount}&safesearch=true`)\r\n      .then(res => this.setState({ pins: res.data.hits }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  changedesign() {\r\n    axios\r\n      .get(\r\n        `${this.state.apiUrl}/?key=${this.state.apiKey}&q=fashion&orientation=vertical&image_type=photon&per_page=${this.state.amount}&order=popular&safesearch=true`)\r\n      .then(res => this.setState({ pins: res.data.hits }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n\r\n  handleOpen = pin => {\r\n    this.setState({ open: true, currentImg: pin });\r\n  };\r\n\r\n\r\n  onTextChange = e => {\r\n    const input = e.target.value;\r\n    this.setState({ [e.target.name]: input }, () => {\r\n      if (input === '') {\r\n        axios\r\n          .get(\r\n            `${this.state.apiUrl}/?key=${this.state.apiKey}&q=watercolor&orientation=vertical&image_type=photo&per_page=${this.state.amount}&safesearch=true`)\r\n          .then(res => this.setState({ pins: res.data.hits }))\r\n          .catch(err => console.log(err));\r\n      } else {\r\n        axios\r\n          .get(\r\n            `${this.state.apiUrl}/?key=${this.state.apiKey}&q=${this.state.inputText}&orientation=vertical&image_type=photo&per_page=${this.state.amount}&safesearch=true`)\r\n          .then(res => this.setState({ pins: res.data.hits }))\r\n          .catch(err => console.log(err));\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    let { pins } = this.state;\r\n    return (\r\n\r\n      <div>\r\n        <header>\r\n          <a href=\"index.html\"><i className=\"fab fa-pinterest logo\"></i></a>\r\n          <input name=\"inputText\" value={this.state.inputText} onChange={this.onTextChange} placeholder=\"Buscar\"/>\r\n      <span>Inicio</span>\r\n      <span>Siguiendo</span>\r\n      <span>foto</span>\r\n      <span>Carolina</span>\r\n      <span> <i class=\"fas fa-comment\"></i></span>\r\n      <span> <i class=\"fas fa-bell\"></i></span>\r\n        </header>\r\n        <div>  \r\n          <button onClick={this.changedesign.bind(this)}>Fashion</button>\r\n          <button onClick={this.changedesign.bind(this)}>Fashion</button>\r\n          <button onClick={this.changedesign.bind(this)}>Fashion</button>\r\n          <button onClick={this.changedesign.bind(this)}>Fashion</button>\r\n          </div>\r\n        <div className=\"content\">\r\n\r\n          <div className=\"masonry\">\r\n            {pins.map(pin => (\r\n              <div key={pin.id}>\r\n                <div className=\"item\">\r\n                  <a href=\"#popup\" className=\"popup-link\" onClick={() => this.handleOpen(pin.webformatURL)} >\r\n                    <img src={pin.webformatURL} alt={pin.user} />\r\n                  </a>\r\n                  <span className=\"lefty\">\r\n                    <a href=\"#popup\" className=\"popup-link\" onClick={() => this.handleOpen(pin.webformatURL)} >\r\n                      {pin.user}\r\n                    </a>\r\n                  </span>\r\n                  <span className=\"dots\"><i className=\"fas fa-ellipsis-h\"></i></span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal-wrapper\" id=\"popup\">\r\n\r\n\r\n        <a className=\"popup-cerrar\" href=\"#\"><i className=\"fas fa-angle-left\"></i> Volver</a>\r\n          <div className=\"popup-contenedor\">\r\n          \r\n     \r\n        <img className=\"popimg\" src={this.state.currentImg} alt=\"pinterest\"/>\r\n        <div className=\"popright\">ARMAR ESTE DIV</div>\r\n          \r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;","import React, { Component } from 'react';\nimport './App.css';\nimport './Style.css';\nimport SearchBar from './Components/Searchbar'\n\n\nclass App extends Component {\n  render() {\n    return (\n     <SearchBar />\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}